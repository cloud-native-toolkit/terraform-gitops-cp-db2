apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.ConfigmapName }}
  labels:
    app: cp-db2
data:
  cp_db2_setup.sh: |
    #!/bin/sh

    ############################################################
    # Login to Cloud pak for Data and get the token
    ############################################################
    CPD_CLUSTER_HOST="${CPDClusterHost}"
    USERNAME="${ENV_USERNAME}"
    PASSWORD="${ENV_PASSWORD}"
    export PYTHONIOENCODING=utf8

    if [ "${CPD_CLUSTER_HOST}" != "" ] && [ "${USERNAME}" != "" ] && [ "${PASSWORD}" != "" ]; then
      if ! CPD_TOKEN=$(
        curl -k -X POST \
          "${CPD_CLUSTER_HOST}"/icp4d-api/v1/authorize \
          -H 'cache-control: no-cache' \
          -H 'content-type: application/json' \
          -d '{"username": "'"${USERNAME}"'","password":"'"${PASSWORD}"'"}' |sed -e 's/[{}]/''/g' |awk -v k="text" '{n=split($0,a,","); print a[3]}'|awk -v k="text" '{n=split($0,b,":"); print b[2]}'|tr -d '"'
      );
      then
        echo "Failed to Create cp4d token"
        exit 1
      fi
      echo "Token created"
      echo ${CPD_TOKEN}
    fi
    

    ############################################################
    #  Create DB2OLTP in Cloud pak for Data
    ############################################################
    DATABASE_HOST="${DatabaseHost}"
    if  [ "${DATABASE_HOST}" != "" ] && [ "$CPD_TOKEN" != "" ]; then
    if ! DBCREATION_RESPONSE=$(
        curl -k -X POST https://database-core-svc:3025/v1/provision -H 'Authorization: Bearer '"$CPD_TOKEN"'' -H 'cache-control: no-cache' -H 'content-type: application/json' -d '{"ServiceInstanceDisplayName": "DB2", "ServiceInstanceNamespace":  "'"${InstanceNamespace}"'","ZenServiceInstanceInfo": { "ZenServiceInstanceType":  "'"${InstanceType}"'","ZenServiceInstanceID": "'"${InstanceId}"'","ZenServiceInstanceVersion":  "'"${InstanceVersion}"'","zenServiceInstanceSecret":  "'"${InstanceSecret}"'"},"metadata": { "api": true,"dedicated": false,"database-name":  "'"${database-name}"'","storage-class": [{ "name":  "'"${storageclassname}"'"}],"size": [{ "value": '${pvcsize}' }],"storage-class-access-mode": [{"name": "ReadWriteMany"} ]}}' 
          ); then
        echo "Failed to Create DB2OLTP"
        exit 1
      fi
      echo "DB2OLTP created"
      echo ${DBCREATION_RESPONSE}
    fi
      